"""v0.14.0 migration

Revision ID: 86b2e24e227e
Revises: 2fb0ae78dea9
Create Date: 2025-08-27 09:13:48.552042

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "86b2e24e227e"
down_revision: Union[str, None] = "2fb0ae78dea9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_goals",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "user_id",
            sa.Integer(),
            nullable=False,
            comment="User ID that the goals belongs",
        ),
        sa.Column(
            "interval",
            sa.String(length=250),
            nullable=False,
            comment="Goal interval (e.g., 'daily', 'weekly', 'monthly', 'yearly')",
        ),
        sa.Column(
            "activity_type", sa.Integer(), nullable=False, comment="Activity type"
        ),
        sa.Column("goal_type", sa.Integer(), nullable=False, comment="Goal type"),
        sa.Column(
            "goal_calories",
            sa.Integer(),
            nullable=True,
            comment="Goal calories in kcal (e.g., 5000 for 5000 kcal)",
        ),
        sa.Column(
            "goal_activities_number",
            sa.Integer(),
            nullable=True,
            comment="Goal activities number (e.g., 5 for 5 activities)",
        ),
        sa.Column(
            "goal_distance",
            sa.Integer(),
            nullable=True,
            comment="Goal distance in meters (e.g., 10000 for 10 km)",
        ),
        sa.Column(
            "goal_elevation",
            sa.Integer(),
            nullable=True,
            comment="Goal elevation in meters (e.g., 1000 for 1000 m)",
        ),
        sa.Column(
            "goal_duration",
            sa.Integer(),
            nullable=True,
            comment="Goal duration in seconds (e.g., 3600 for 1 hours)",
        ),
        sa.Column(
            "goal_steps",
            sa.Integer(),
            nullable=True,
            comment="Goal steps (e.g., 10000 for 10,000 steps)",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_users_goals_user_id"), "users_goals", ["user_id"], unique=False
    )
    op.alter_column(
        "gear",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        comment="Gear creation date (DateTime)",
        existing_comment="Gear creation date (DATETIME)",
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "gear",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        comment="Gear creation date (DATETIME)",
        existing_comment="Gear creation date (DateTime)",
        existing_nullable=False,
    )
    op.drop_index(op.f("ix_users_goals_user_id"), table_name="users_goals")
    op.drop_table("users_goals")
    # ### end Alembic commands ###
