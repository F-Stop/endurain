"""v0.13.0 migration

Revision ID: d9a77cb243c8
Revises: 72e2079576d3
Create Date: 2025-06-16 21:43:35.246009

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "d9a77cb243c8"
down_revision: Union[str, None] = "72e2079576d3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gear_components",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "user_id",
            sa.Integer(),
            nullable=False,
            comment="User ID that the gear component belongs to",
        ),
        sa.Column(
            "gear_id",
            sa.Integer(),
            nullable=False,
            comment="Gear ID associated with this component",
        ),
        sa.Column(
            "type",
            sa.String(length=250),
            nullable=False,
            comment="Type of gear component",
        ),
        sa.Column(
            "brand",
            sa.String(length=250),
            nullable=False,
            comment="Gear component brand (May include spaces)",
        ),
        sa.Column(
            "model",
            sa.String(length=250),
            nullable=False,
            comment="Gear component model (May include spaces)",
        ),
        sa.Column(
            "purchase_date",
            sa.DateTime(),
            nullable=False,
            comment="Gear component purchase date (DateTime)",
        ),
        sa.Column(
            "retired_date",
            sa.DateTime(),
            nullable=True,
            comment="Gear component retired date (DateTime)",
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            nullable=False,
            comment="Is gear component active",
        ),
        sa.Column(
            "expected_kms",
            sa.DECIMAL(precision=11, scale=2),
            nullable=True,
            comment="Expected kilometers of the gear component",
        ),
        sa.Column(
            "purchase_value",
            sa.DECIMAL(precision=11, scale=2),
            nullable=True,
            comment="Purchase value of the gear component",
        ),
        sa.ForeignKeyConstraint(["gear_id"], ["gear.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_gear_components_gear_id"), "gear_components", ["gear_id"], unique=False
    )
    # Add new columns to server_settings table
    op.add_column(
        "server_settings",
        sa.Column(
            "currency",
            sa.Integer(),
            nullable=True,
            comment="Currency (one digit)(1 - euro, 2 - dollar, 3 - pound)",
        ),
    )
    op.add_column(
        "server_settings",
        sa.Column(
            "num_records_per_page",
            sa.Integer(),
            nullable=True,
            comment="Number of records per page in lists",
        ),
    )
    op.execute(
        """
        UPDATE server_settings
        SET currency = 1, num_records_per_page = 25
        WHERE id = 1;
    """
    )
    op.alter_column(
        "server_settings",
        "currency",
        nullable=False,
        comment="Currency (one digit)(1 - euro, 2 - dollar, 3 - pound)",
        existing_type=sa.Integer(),
    )
    op.alter_column(
        "server_settings",
        "num_records_per_page",
        nullable=False,
        comment="Number of records per page in lists",
        existing_type=sa.Integer(),
    )
    op.alter_column(
        "server_settings",
        "units",
        existing_type=sa.INTEGER(),
        comment="Units (one digit)(1 - metric, 2 - imperial)",
        existing_comment="User units (one digit)(1 - metric, 2 - imperial)",
        existing_nullable=False,
    )
    # Add new column to users table
    op.add_column(
        "users",
        sa.Column(
            "currency",
            sa.Integer(),
            nullable=True,
            comment="User currency (one digit)(1 - euro, 2 - dollar, 3 - pound)",
        ),
    )
    op.execute(
        """
        UPDATE users
        SET currency = 1
        WHERE currency IS NULL;
    """
    )
    op.alter_column(
        "users",
        "currency",
        nullable=False,
        comment="User currency (one digit)(1 - euro, 2 - dollar, 3 - pound)",
        existing_type=sa.Integer(),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_gear_components_gear_id"), table_name="gear_components")
    op.drop_table("gear_components")
    op.alter_column(
        "server_settings",
        "units",
        existing_type=sa.INTEGER(),
        comment="User units (one digit)(1 - metric, 2 - imperial)",
        existing_comment="Units (one digit)(1 - metric, 2 - imperial)",
        existing_nullable=False,
    )
    op.drop_column("server_settings", "currency")
    op.drop_column("server_settings", "num_records_per_page")
    op.drop_column("users", "currency")
    # ### end Alembic commands ###
